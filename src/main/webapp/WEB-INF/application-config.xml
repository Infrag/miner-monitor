<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:ctx="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:data="http://www.springframework.org/schema/data/jpa" 
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="
          http://www.springframework.org/schema/beans       http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/aop         http://www.springframework.org/schema/aop/spring-aop.xsd
          http://www.springframework.org/schema/context     http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/tx          http://www.springframework.org/schema/tx/spring-tx.xsd
          http://www.springframework.org/schema/util        http://www.springframework.org/schema/util/spring-util.xsd
          http://www.springframework.org/schema/data/jpa    http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
          http://www.springframework.org/schema/task        http://www.springframework.org/schema/task/spring-task.xsd">

    <!--
      Annotation driven configuration support.
    -->
    <ctx:annotation-config />
    <ctx:component-scan base-package="org.obozek.minermonitor"/>
    <!--<ctx:load-time-weaver />-->
    
    
    <!--JSF 2 ViewScope Support-->
    <bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
        <property name="scopes">
            <map>
                <entry key="view">
                    <bean class="org.obozek.minermonitor.ViewScope"/>
                </entry>
            </map>
        </property>
    </bean>

<!--    <context:property-placeholder location="classpath:META-INF/jdbc.properties"/>-->
    <!-- Define the other the old-fashioned way, with 'ignoreUnresolvablePlaceholders' set to TRUE -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:META-INF/localJdbc.properties</value>
                <value>classpath:META-INF/settings.properties</value>
            </list>
        </property>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>
    <bean id="mainDataSource" class="com.jolbox.bonecp.BoneCPDataSource" 
          destroy-method="close"    
          p:driverClass="${jdbc.db.driverClassName}"
          p:jdbcUrl="${jdbc.db.url}"
          p:username="${jdbc.db.username}"
          p:password="${jdbc.db.password}"
          p:idleConnectionTestPeriod="60"
          p:idleMaxAge="240"
          p:maxConnectionsPerPartition="60" 
          p:minConnectionsPerPartition="20"
          p:partitionCount="3"
          p:acquireIncrement="10"
          p:statementsCacheSize="50"
          p:releaseHelperThreads="3" >
    </bean>
    
    <!-- Spring bean configuration. Tell Spring to bounce off BoneCP -->
    <bean id="dataSource"
                class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
        <property name="targetDataSource">
            <ref local="mainDataSource" />
        </property>
    </bean>
    <bean id="eclipsePP" class="org.eclipse.persistence.jpa.PersistenceProvider"/>
            
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">  
        <property name="persistenceUnitName" value="minerMonitorPU"/>
        <property name="dataSource" ref="dataSource"/>  
        <property name="persistenceProvider" ref="eclipsePP" />
        <property name="packagesToScan" value="org.obozek.minermonitor.entities"/>
        <property name="jpaVendorAdapter">  
            <bean class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter">  
                <property name="generateDdl" value="true"/>  
                <property name="database" value="${jdbc.db.obj}"/>  
                <property name="showSql" value="true"/>  
                <property name="databasePlatform" value="${jdbc.db.platform}"/>  
            </bean>  
        </property> 
        <property name="jpaPropertyMap">
            <map>
                <entry key="eclipselink.weaving" value="true"/>
                <!--<entry key="eclipselink.logging.logger" value="org.eclipse.persistence.logging.Log4jSessionLogger"/>-->
                <entry key="eclipselink.logging.level" value="FINEST"/>
                <entry key="eclipselink.logging.level.sql" value="FINEST"/>
                <entry key="eclipselink.logging.parameters" value="true"/>
                <entry key="eclipselink.target-database" value="${jdbc.db.platform}"/>
                <entry key="javax.persistence.schema-generation.database.action" value="create"/>
            </map>
        </property>
        <!--<property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml"/>-->  
        <property name="loadTimeWeaver">          
            <bean class="org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver"/>  
        </property>  
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.EclipseLinkJpaDialect"/>
        </property>
    </bean>
    
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/> 
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <!--<property name="dataSource" ref="dataSource"/>-->
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
    
    
    
    <tx:annotation-driven transaction-manager="transactionManager" />
    <!-- used for automatic scanning of JPA entities -->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
    <!--<ctx:spring-configured />-->
    
<!--  EMAIL SENDING beans    
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${smtp.host}"/>
        <property name="username" value="${smtp.name}"/>
        <property name="password" value="${smtp.pass}"/>
    </bean>

 this is a template message that we can pre-load with default state 
    <bean id="templateMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="${from.email}"/>
        <property name="subject" value="${subject}"/>
    </bean>
    
    <bean id="MailingService" class="cz.boza.formcreator.service.MailingService">
        <property name="mailSender" ref="mailSender"/>
        <property name="templateMessage" ref="templateMessage"/>
        <property name="pattern" value="${date.pattern}"/>
    </bean>-->
    
    <!-- Resource Bundle -->
    <!--    <bean id="messageSource"
          class="cz.boza.motoforza.util.spring.JSFReloadableMessageSourceBundle">
        <property name="basename">
            <value>classpath:META-INF\msgs</value>
        </property>
    </bean>-->
    
    <data:repositories base-package="org.obozek.minermonitor.repository" 
                       entity-manager-factory-ref="entityManagerFactory"
                       transaction-manager-ref="transactionManager"
                       factory-class="org.obozek.minermonitor.repository.BaseRepositoryFactoryBean"/>
    
    <!--Scheduling-->    
    <task:scheduler id="myScheduler" pool-size="100" />
</beans>
